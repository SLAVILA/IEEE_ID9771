# -*- coding: utf-8 -*-
"""Final_Curto_Prazo_sem_ena_de_ModelPredictions_WithCovariable_20240303LogPricesNewDataPLD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-3zqfRzXoo9K9lHixDHnX1uOfM-AYOH3

### (Sem ENA) ModelPredictions_WithCovariable_20240303LogPricesNewDataPLD
"""
import sys
from flask import copy_current_request_context
import json
import os
from flask import current_app, request, session
import numpy as np
import pandas as pd
from datetime import datetime, timedelta
from scipy.optimize import least_squares
#from scipy.optimize import minimize
#import seaborn as sns
import matplotlib.pyplot as plt
from app.analise_risco import b_analise_risco
from plotly.io import to_json
from biblioteca import task
import plotly.tools as tls
import mpld3
import shutil
import plotly.io as pio
import plotly.graph_objects as go
from plotly.io import to_json
import plotly.offline as pyo
from scipy.sparse import coo_matrix #sparse

script_dir = os.path.dirname(__file__)



@b_analise_risco.route("/_analise_risco_curto_auxiliar", methods=["POST"])
def _analise_risco_curto_auxiliar():
    tipo = request.form.get('tipo')
    try:
        output_file = os.path.join('web', 'static', 'tasks_saida', 'estocastico', tipo, 'estocastico.json')
        with open(output_file, 'r') as f:
            plot_json = json.load(f)
    except:
        return json.dumps({"status": "1", "msg": "Gráfico não encontrado."})
    return json.dumps({"status": "0", "plot": plot_json})

@b_analise_risco.route("/_analise_risco_curto_obter", methods=["POST"])
def _analise_risco_curto_obter():
    tipo = request.form.get('tipo')
    m = request.form.get('m')
    nome_arquivo = f'estocastico_{tipo}.json'
    output_file = os.path.join('web', 'static', 'tasks_saida', 'estocastico', m, 'risco', nome_arquivo)
    
    # Read the HTML file
    with open(output_file, 'r') as f:
        plot_json = json.load(f)
    
    return json.dumps({"status": "0", "plot": plot_json})