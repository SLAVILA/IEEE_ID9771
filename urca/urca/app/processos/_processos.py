# -*- coding: utf-8 -*-
"""Final_Curto_Prazo_sem_ena_de_ModelPredictions_WithCovariable_20240303LogPricesNewDataPLD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-3zqfRzXoo9K9lHixDHnX1uOfM-AYOH3

### (Sem ENA) ModelPredictions_WithCovariable_20240303LogPricesNewDataPLD
"""
import sys
from flask import copy_current_request_context, jsonify
import json
import os
from flask import current_app, request, session
import numpy as np
import pandas as pd
from datetime import datetime, timedelta
from scipy.optimize import least_squares
#from scipy.optimize import minimize
#import seaborn as sns
import matplotlib.pyplot as plt
from app.processos import b_processos
from plotly.io import to_json
from biblioteca import task
import plotly.tools as tls
import mpld3
import shutil
import plotly.io as pio
import plotly.graph_objects as go
from plotly.io import to_json
import plotly.offline as pyo
from scipy.sparse import coo_matrix #sparse
from biblioteca.task import Tasker

script_dir = os.path.dirname(__file__)



@b_processos.route("/_processos", methods=["POST"])
def _processos():
    action = request.form.get('action')
    process_id = request.form.get('process')
    pid_processo = request.form.get('pid_processo')
    id_usuario = request.form.get('id_usuario')
    nome_funcao = request.form.get('nome_funcao')
    
    if action == 'start':
        if not process_id:
            return jsonify({"status": "1", "msg": "Processo não especificado."})

        usuario_id = session.get('usuario', {}).get('id')
        if not usuario_id:
            return jsonify({"status": "1", "msg": "Usuário não autenticado."})

        if process_id == 'atualizar_banco':
            Tasker().nova_task(funcao=current_app.atualizar_banco, usuario_id=2)
        elif process_id == 'iniciar_markov':
            Tasker().nova_task(funcao=current_app.iniciar_markov, usuario_id=6)
        elif process_id == 'iniciar_estocastico':
            Tasker().nova_task(funcao=current_app.iniciar_estocastico, usuario_id=3)
        elif process_id == 'iniciar_longo_prazo':
            Tasker().nova_task(funcao=current_app.iniciar_longo_prazo, usuario_id=4)
        else:
            Tasker().nova_task(funcao=current_app.iniciar_analise, usuario_id=5)

        return jsonify({"status": "0", "msg": "Processo iniciado com sucesso."})
    
    if action == 'stop':
        if not pid_processo:
            return jsonify({"status": "1", "msg": "Processo não especificado."})

        usuario_id = session.get('usuario', {}).get('id')
        if not usuario_id:
            return jsonify({"status": "1", "msg": "Usuário não autenticado."})

        
        Tasker()._encerrar_processo(pid_processo, id_usuario, nome_funcao)

        return jsonify({"status": "0", "msg": "Processo parado com sucesso."})
    
    return jsonify({"status": "1", "msg": "Ação inválida."})